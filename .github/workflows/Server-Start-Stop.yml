name: Server Start Stop

on:
  workflow_dispatch:
    inputs:
      envName:
        description: Environment Name
        type: choice
        options:
          - "devl"
          - "qual"
          - "cert"
        required: true

      serverName:
        required: true
        type: string
        description: Enter the end server name(s) separated with commas

      command:
        description: 	Command
        type: choice
        options:
          - "start"
          - "stop"
          - "restart"
          - "doc"
          - "recover"
        required: true

jobs:
  app-server-start-stop:
    runs-on: ubuntu-latest

    steps:
      - name: server start stop
        env:
          environmentName: ${{ github.event.inputs.environmentName }}
          serverName: ${{ github.event.inputs.serverName }}
          command: ${{ github.event.inputs.command }} 
          applicationID: applicationID
          applicationPassword: applicationPassword
          
        run: |
          echo "environmentName=${environmentName}"
          echo "serverName=${serverName}"
          echo "command=${command}"
          
          IFS=',' read -ra ServerNameArray <<< "${{ github.event.inputs.serverName }}";
          for Servername in "${ServerNameArray[@]}"; do
            echo "ServerName:${Servername}"
            truncateServerName=$(echo "${Servername}" | awk -F'.' '{print $1}')
            finalServerName=${Servername}/gpps.${truncateServerName}
            echo "finalServerName=${finalServerName}"
            echo  "Running Deployit API"
            echo "ServerName:${Servername}"
            InitialUrl=https://abc/deployit/control/prepare/$command/$environmentName/$finalServerName
            echo "InitialUrl=${InitialUrl}"
            Return_value=Get -u $applicationID:$applicationPassword $InitialUrl
            echo "Return_value=${Return_value}"    
          done
          
